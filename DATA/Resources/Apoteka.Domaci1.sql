ALTER USER S14742 IDENTIFIED BY maki;

CREATE TABLE APOTEKARSKA_USTANOVA (
   ID INTEGER CONSTRAINT APOTEKARSKA_USTANOVA_PK PRIMARY KEY,

   NAZIV VARCHAR(30) NOT NULL,
   SAJT VARCHAR(30) NOT NULL,
   EMAIL VARCHAR(30),
   BROJ_TELEFONA VARCHAR(30)
);

CREATE TABLE PRODAJNO_MESTO (
 ID INTEGER CONSTRAINT PRODAJNO_MESTO_PK PRIMARY KEY,

 ADRESA VARCHAR(30),
 MESTO VARCHAR(30),
 NAZIV VARCHAR(30) NOT NULL,

 APOTEKARSKA_USTANOVA_ID INTEGER,

 CONSTRAINT APOTEKARSKA_USTANOVA_ID_FK FOREIGN KEY (APOTEKARSKA_USTANOVA_ID) REFERENCES APOTEKARSKA_USTANOVA (ID)
);


CREATE TABLE PROIZVODJAC(
 ID INTEGER CONSTRAINT PROIZVODJAC_PK PRIMARY KEY,

 NAZIV VARCHAR(30) NOT NULL
);

CREATE TABLE BOLEST(
 ID INTEGER CONSTRAINT BOLEST_PK PRIMARY KEY,

 LATINSKI_NAZIV VARCHAR(30),
 NARODNI_NAZIV VARCHAR(30),
 OPIS VARCHAR(700)
);

CREATE TABLE OSOBA (
 ID INTEGER CONSTRAINT OSOBA_PK PRIMARY KEY,

 L_IME VARCHAR(30) NOT NULL,
 PREZIME VARCHAR(30) NOT NULL,
 BROJ_TELEFONA VARCHAR(20),
 EMAIL VARCHAR(30)
);

CREATE TABLE ZAPOSLENI (
 ID INTEGER CONSTRAINT ZAPOSLENI_PK PRIMARY KEY,

 DATUM_RODJENJA DATE,
 JMBG VARCHAR(20) NOT NULL UNIQUE,
 DATUM_ZAPOSLJENJA DATE,
 FFARMACEUT NUMBER(1,0) DEFAULT 0,
 DATUM_DIPLOMIRANJA DATE,
 DATUM_OBNOVE_LICENCE DATE,

 ADRESA VARCHAR(30),
 MESTO VARCHAR(50),

 PRODAJNO_MESTO_ID INTEGER,

 CONSTRAINT PRODAJNO_MESTO_ID_FK FOREIGN KEY (PRODAJNO_MESTO_ID) REFERENCES PRODAJNO_MESTO (ID),
 constraint FKE228FF2F2B2EF896 foreign key (ID) references OSOBA (ID) ON DELETE CASCADE
);

CREATE TABLE KUPAC (
  ID INTEGER CONSTRAINT KUPAC_PK PRIMARY KEY,
  PAZAR NUMBER DEFAULT 0,

  constraint FKC5045A942B2EF897 foreign key (ID) references OSOBA (ID) ON DELETE CASCADE
);

CREATE TABLE LEKAR (
  ID INTEGER CONSTRAINT LEKAR_PK PRIMARY KEY,

  constraint FKC5045A942B2EF898 foreign key (ID) references OSOBA (ID) ON DELETE CASCADE
);

CREATE TABLE PAKOVANJE (
 ID INTEGER CONSTRAINT PAKOVANJE_PK PRIMARY KEY,

 TIP INTEGER NOT NULL,
 SASTAV VARCHAR(700) NOT NULL,
 KOLICINA INTEGER DEFAULT 0
);

CREATE TABLE LEK (
 ID INTEGER CONSTRAINT PK_LEK PRIMARY KEY,

 TIP INTEGER NOT NULL,
 DEJSTVO VARCHAR(700),
 NEZELJENI_EFEKTI VARCHAR(700),
 NA_RECEPT NUMBER(1, 0) DEFAULT 1,
 PROCENAT_PARTICIPACIJE DECIMAL(6, 3),
 CENA DECIMAL(6, 3) NOT NULL,
 NACIN_DOZIRANJA INTEGER NOT NULL,
 HEMIJSKI_NAZIV VARCHAR(100),

 PAKOVANJE_ID INTEGER,

 CONSTRAINT PAK_FK FOREIGN KEY (PAKOVANJE_ID) REFERENCES PAKOVANJE (ID)
);

CREATE TABLE LEK_PROIZVODJAC (
  LEK_ID INTEGER NOT NULL,
  PROIZVODJAC_ID INTEGER NOT NULL,

  KOMERCIJALNI_NAZIV_LEKA VARCHAR(80) unique,

  CONSTRAINT LEK_PROIZVODJAC_ID PRIMARY KEY (LEK_ID, PROIZVODJAC_ID),

  constraint FK6605F5DA8EAAD850 foreign key (LEK_ID) references LEK (ID) ON DELETE CASCADE,
  constraint FK6605F5DA51BBBF2E foreign key (PROIZVODJAC_ID) references PROIZVODJAC (ID) ON DELETE CASCADE
);

CREATE TABLE LEK_BOLEST (
  BOLEST_ID INTEGER not null,
  LEK_ID INTEGER not null,
  
  constraint LEK_BOLEST_ID primary key (LEK_ID, BOLEST_ID),

  constraint FKC1CA3E488EAAD850 foreign key (LEK_ID) references LEK (ID) ON DELETE CASCADE,
  constraint FKC1CA3E489B88DFD6 foreign key (BOLEST_ID) references BOLEST (ID) ON DELETE CASCADE
);

CREATE TABLE PRODAJNO_MESTO_LEK (
  LEK_ID INTEGER not null,
  PRODAJNO_MESTO_ID INTEGER not null,

  KOLICINA INTEGER,

  constraint PRODAJNO_MESTO_LEK_ID primary key (LEK_ID, PRODAJNO_MESTO_ID),

  constraint FK7A56ABE8EAAD850 foreign key (LEK_ID) references LEK (ID) ON DELETE CASCADE,
  constraint FK7A56ABEF84178C2 foreign key (PRODAJNO_MESTO_ID) references PRODAJNO_MESTO (ID) ON DELETE CASCADE
);

CREATE TABLE KONTRAINDIKACIJA (
 ID INTEGER CONSTRAINT KONTRAINDIKACIJA_PK PRIMARY KEY,
 OPIS VARCHAR(400) NOT NULL,

 LEK_ID INTEGER NOT NULL,
 BOLEST_ID INTEGER,
 PAKOVANJE_ID INTEGER,

 CONSTRAINT LEK_KONTRAINDIKACIJA_FK FOREIGN KEY (LEK_ID) REFERENCES LEK (ID) ON DELETE CASCADE,
 CONSTRAINT BOLEST_KONTRAINDIKACIJA_FK FOREIGN KEY (BOLEST_ID) REFERENCES BOLEST (ID) ON DELETE CASCADE,
 CONSTRAINT PAKOVANJE_KONTRAINDIKACIJA_FK FOREIGN KEY (PAKOVANJE_ID) REFERENCES PAKOVANJE (ID) ON DELETE CASCADE
);

CREATE TABLE RECEPT (
 ID INTEGER CONSTRAINT RECEPT_PK PRIMARY KEY,

 DATUM_REALIZACIJE DATE,
 DATUM_VAZENJA DATE,
 DOZA INTEGER NOT NULL,
 KOLICINA_LEKA INTEGER NOT NULL,

 LEK_ID INTEGER,
 FARMACEUT_ID INTEGER,
 LEKAR_ID INTEGER,
 KUPAC_ID INTEGER,
 PRODAJNO_MESTO_ID INTEGER,

 constraint FKA80203CF8EAAD850 foreign key (LEK_ID) references LEK (ID) ON DELETE CASCADE,
 constraint FKA80203CF36E028D3 foreign key (FARMACEUT_ID) references ZAPOSLENI (ID) ON DELETE CASCADE,
 constraint FKA80203CFEFE4B09D foreign key (LEKAR_ID) references LEKAR (ID) ON DELETE CASCADE,
 constraint FKA80203CF13561E6B foreign key (KUPAC_ID) references KUPAC (ID) ON DELETE CASCADE,
 constraint FKA80203CFF84178C2 foreign key (PRODAJNO_MESTO_ID) references PRODAJNO_MESTO (ID) ON DELETE CASCADE
);

--------------------------------------------------------
--  DDL for Sequence RECEPT_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "RECEPT_ID_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;

--------------------------------------------------------
--  DDL for Sequence KONTRAINDIKACIJA_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "KONTRAINDIKACIJA_ID_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;

--------------------------------------------------------
--  DDL for Sequence PRODAJNO_MESTO_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "PRODAJNO_MESTO_ID_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;

--------------------------------------------------------
--  DDL for Sequence APOTEKARSKA_USTANOVA_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "APOTEKARSKA_USTANOVA_ID_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;

--------------------------------------------------------
--  DDL for Sequence PROIZVODJAC_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "PROIZVODJAC_ID_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;

--------------------------------------------------------
--  DDL for Sequence BOLEST_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "BOLEST_ID_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;


--------------------------------------------------------
--  DDL for Sequence OSOBA_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "OSOBA_ID_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;

--------------------------------------------------------
--  DDL for Trigger OSOBA_AUTO_PK
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "OSOBA_AUTO_PK"
    BEFORE INSERT
    ON OSOBA
    REFERENCING NEW AS NEW
    FOR EACH ROW
BEGIN
    SELECT OSOBA_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/
ALTER TRIGGER "OSOBA_AUTO_PK" ENABLE;

--------------------------------------------------------
--  DDL for Sequence LEK_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "LEK_ID_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;

--------------------------------------------------------
--  DDL for Trigger LEK_AUTO_PK
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "LEK_AUTO_PK"
    BEFORE INSERT
    ON LEK
    REFERENCING NEW AS NEW
    FOR EACH ROW
BEGIN
    SELECT LEK_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/
ALTER TRIGGER "LEK_AUTO_PK" ENABLE;


   CREATE SEQUENCE  "PAKOVANJE_ID_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;

--------------------------------------------------------
--  DDL for Trigger PAKOVANJE_AUTO_PK
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "PAKOVANJE_AUTO_PK"
    BEFORE INSERT
    ON PAKOVANJE
    REFERENCING NEW AS NEW
    FOR EACH ROW
BEGIN
    SELECT PAKOVANJE_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/
ALTER TRIGGER "PAKOVANJE_AUTO_PK" ENABLE;
